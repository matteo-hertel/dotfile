call plug#begin()
" Language
Plug 'fatih/vim-go'
Plug 'sheerun/vim-polyglot'
" Misc
Plug 'airblade/vim-gitgutter'
Plug 'christoomey/vim-sort-motion'
Plug 'christoomey/vim-tmux-navigator'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & npm i'  }
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'leafgarland/typescript-vim'
Plug 'mileszs/ack.vim'
Plug 'neoclide/coc.nvim', {'tag': '*', 'do': { -> coc#util#install()}}
Plug 'nvie/vim-flake8'
Plug 'prettier/vim-prettier'
Plug 'rakr/vim-one'
Plug 'schickling/vim-bufonly'
Plug 'scrooloose/nerdtree'
Plug 'tell-k/vim-autopep8'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'unblevable/quick-scope'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'w0rp/ale'
Plug 'metakirby5/codi.vim'


call plug#end()
filetype plugin indent on

"Misc settings
syntax on
set relativenumber
set nu rnu
set expandtab
set noswapfile
set nocursorline
set nocursorcolumn
set smartcase
set lazyredraw
set shell=/bin/zsh\ -l
set tabstop=2
set shiftwidth=2
set softtabstop=2
set backspace=indent,eol,start
set background=dark
set foldmethod=syntax
set foldlevel=1
let mapleader = ' '

"Theme
if (has("nvim"))
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  if (has("termguicolors"))
    set termguicolors
  endif
colorscheme one
let g:one_allow_italics = 1

call one#highlight('vimLineComment', '292c34', '5c6370', 'italic')

"Nerdtree"
let NERDTreeShowHidden=1
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif


"Check if NERDTree is open or active
 function! IsNERDTreeOpen()        
   return exists("t:NERDTreeBufName") && (bufwinnr(t:NERDTreeBufName) != -1)
   endfunction

" Pins NERDTree to the left hand side
 augroup AuNERDTreeCmd
 autocmd AuNERDTreeCmd FocusGained * call s:UpdateNERDTree()
 augroup END

 function s:UpdateNERDTree(...)
   let stay = 0

   if(exists("a:1"))
     let stay = a:1
   end

   if exists("t:NERDTreeBufName")
     let nr = bufwinnr(t:NERDTreeBufName)
     if nr != -1
       exe nr . "wincmd w"
       exe substitute(mapcheck("R"), "<CR>", "", "")
       if !stay
         wincmd p
       end
     endif
   endif
 endfunction

" Call NERDTreeFind iff NERDTree is active, current window contains a modifiable
" file, and we're not in vimdiff
   function! SyncTree()
     if &modifiable && IsNERDTreeOpen() && strlen(expand('%')) > 0 && !&diff
         NERDTreeFind
             wincmd p
               endif
               endfunction

               " Highlight currently open buffer in NERDTree
               autocmd BufEnter * call SyncTree()
"Prettier
let g:prettier#autoformat = 0

autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.vue Prettier

"Flake8
autocmd BufWritePost *.py call Flake8()

" Autopep8
let g:autopep8_on_save = 1
let g:autopep8_disable_show_diff=1

" vim-airline
let g:airline_theme='one'
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
      let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 1
set laststatus=2

" Fugitive
nmap <leader>gb :Gblame<CR>
nmap <leader>gs :Gstatus<CR>
nmap <leader>gd :Gdiff<CR>
nmap <leader>gc :Gcommit<CR>
nmap <leader>gp :Gpush<CR>
nmap <leader>gl :Gpull<CR>
nmap <leader>gh :Gbrowse<CR>

"Ack
if executable('ag')
  let g:ackprg = 'ag --vimgrep --ignore node_modules'
endif
cnoreabbrev Ack Ack!

" FZF
let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -g ""'

let g:fzf_action = {
  \ 'ctrl-q': 'wall | bdelete',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }
let g:fzf_layout = { 'down': '~40%' }


" Ale
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'go': ['gofmt'],
\   'python': ['flake8'],
\}
let g:ale_python_flake8_args="flake8"
let g:ale_sign_column_always = 1
let g:ale_sign_error='✘'
let g:ale_sign_warning='▲'

let g:ale_echo_msg_error_str = '✘'
let g:ale_echo_msg_warning_str = '▲'
let g:ale_echo_msg_format = '%severity% [%linter%] %s'

let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_enter = 1
let g:ale_open_list = 0

let g:vim_markdown_folding_disabled = 1

"Js
let g:javascript_plugin_jsdoc = 1
let g:javascript_plugin_flow = 1

"Go
let g:go_doc_keywordprg_enabled = 0

"Custom Mapping
inoremap jj <Esc>

" Folds
nmap <leader>f zO
nmap <leader>F zc

" Coc
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

"split buffers
nnoremap <Leader>s :sv<CR>
nnoremap <Leader>v :vs<CR>

"save/exit/quit
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>z :wq<CR>

vmap <Leader>y "+y

nmap <C-P> :Files<CR>
nmap <C-G> :GFiles<CR>
nmap <C-I> :Tags<CR>
nmap <Leader>c :let @/='\<<C-R>=expand("<cword>")<CR>\>'<CR>:set hls<CR>
nmap <Leader>th :set hlsearch!<CR>
nmap <Leader>m :marks<CR>
nmap <Leader>r :reg<CR>
nmap <Leader>n :NERDTreeToggle<CR>
nnoremap <Leader>a :Ack!<Space>
nnoremap <Leader>js :enew <bar>:Codi javascript<CR>

" Movement
nnoremap J 6j
nnoremap K 6k
nnoremap H 6h
nnoremap L 6l

" Buffers
set hidden
nmap <leader>bb :Buffer<cr>
nmap <leader>T :enew<CR>
nmap <leader>l :bnext<CR>
nmap <leader>h :bprevious<CR>
nmap <leader>bl :ls<CR>
nmap <leader>bd :bd<CR>
nmap <Leader>bc :BufOnly<cr>
